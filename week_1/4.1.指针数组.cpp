#include <iostream>
using namespace std;

int main() {
    int num1 = 10, num2 = 20, num3 = 30;  // 定义3个整数变量并初始化
    int* ptrArr[3] = {&num1, &num2, &num3};  // 定义一个包含3个指向整数类型的指针变量的数组，并将每个指针变量初始化为指向对应的整数变量

    for (int i = 0; i < 3; ++i) {  // 遍历指针数组中的每一个指针变量
        std::cout << "指针 " << i + 1 << " 所指向的值： " << *ptrArr[i] << std::endl;  // 输出指针变量所指向的变量的值
    }

    return 0;
}

/*

这段代码定义了3个整数变量 num1、num2 和 num3，并初始化它们分别为10、20和30。然后，定义了一个包含3个指向整数类型的指针变量的数组 ptrArr，并将每个指针变量初始化为指向对应的整数变量。

在 for 循环中，循环变量 i 从0到2，依次遍历数组 ptrArr 中的每一个指针变量。对于每个指针变量，使用 * 操作符访问其所指向的变量，并将该变量的值输出到屏幕上。

输出结果为：

```
指针 1 所指向的值： 10
指针 2 所指向的值： 20
指针 3 所指向的值： 30
```

可以看到，通过使用指针数组，我们可以方便地遍历多个指针变量，并访问它们所指向的变量的值。

*/