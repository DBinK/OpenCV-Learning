/*

题目三：指针作为函数返回值 请编写一个函数，接受一个整数作为参数，并返回一个指向新分配的整数的指针。

*/

#include <iostream>

int* createInt(int num) {
  int* ptr = new int(num);
  return ptr;
}

int main() {
  int num = 42;
  int* ptr = createInt(num);

  std::cout << "ptr 指向的变量的值为: " << *ptr << std::endl;

  delete ptr;  // 释放动态分配的内存

  return 0;
}

/*

在C++中，可以使用关键字 new 来动态分配内存，从而在函数内部创建一个新的整数变量，并返回一个指向该变量的指针。具体实现方法是：定义一个函数，该函数接受一个整数作为参数，然后创建一个新的整数变量，并将该变量的地址作为函数的返回值。

下面是一个示例代码，演示如何使用指针作为函数的返回值来返回一个新分配的整数变量的地址：

在上述代码中，我们定义了一个 createInt 函数，该函数接受一个整数 num 作为参数。在函数内部，我们使用 new 关键字动态分配内存，创建一个新的整数变量，并将 num 的值作为该变量的初始值。然后，我们将该变量的地址作为函数的返回值。

在主函数中，我们定义了一个整数变量 num，并将其值设置为42。然后，我们调用 createInt 函数，并将 num 的值作为参数传递给该函数，从而创建一个新的整数变量并返回其地址。我们使用指针变量 ptr 来保存该地址，并输出指针变量所指向的变量的值。

最后，我们使用 delete 关键字释放动态分配的内存，以避免内存泄漏。

输出结果：

```
ptr 指向的变量的值为: 42
```

可以看到，createInt 函数成功地创建了一个新的整数变量，并返回了该变量的地址。通过指针变量 ptr，我们可以访问该变量，并输出了其值。

*/